Terminals unused in grammar

   BREAK


Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | Program function

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    4 declaration_loop: %empty
    5                 | declaration_loop declaration SEMICOLON

    6 declaration: IDENTIFIER COLON INTEGER
    7            | IDENTIFIER COLON ARRAY L_SQUARE_BRACKET DIGITS R_SQUARE_BRACKET OF INTEGER

    8 statement_loop: statement SEMICOLON
    9               | statement_loop statement SEMICOLON

   10 statement: var ASSIGN expression
   11          | IF bool_expr THEN statement_loop ENDIF
   12          | IF bool_expr THEN statement_loop ELSE statement_loop ENDIF
   13          | WHILE bool_expr BEGINLOOP statement_loop ENDLOOP
   14          | DO BEGINLOOP statement_loop ENDLOOP WHILE bool_expr
   15          | READ var_loop
   16          | WRITE var_loop
   17          | CONTINUE
   18          | RETURN expression

   19 bool_expr: Relation_Exps
   20          | bool_expr OR Relation_Exps

   21 Relation_Exps: Relation_Exp
   22              | Relation_Exps AND Relation_Exp

   23 Relation_Exp: expression comp expression
   24             | NOT expression comp expression
   25             | TRUE
   26             | FALSE
   27             | L_PAREN bool_expr R_PAREN

   28 comp: LT
   29     | GT
   30     | LTE
   31     | GTE
   32     | NOTEQ
   33     | EQUIV

   34 expression: mult_expr
   35           | expression ADD mult_expr
   36           | expression SUB mult_expr

   37 expression_loop: expression
   38                | expression_loop COMMA expression

   39 mult_expr: term
   40          | mult_expr MULT term
   41          | mult_expr DIV term
   42          | mult_expr MOD term

   43 term: var
   44     | SUB var
   45     | DIGITS
   46     | SUB DIGITS
   47     | L_PAREN expression R_PAREN
   48     | SUB L_PAREN expression R_PAREN
   49     | IDENTIFIER L_PAREN expression_loop R_PAREN

   50 var_loop: var
   51         | var_loop COMMA var

   52 var: IDENTIFIER
   53    | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 35
SUB (259) 36 44 46 48
MULT (260) 40
DIV (261) 41
MOD (262) 42
LT (263) 28
GT (264) 29
LTE (265) 30
GTE (266) 31
EQUIV (267) 33
NOTEQ (268) 32
SEMICOLON (269) 3 5 8 9
COLON (270) 6 7
COMMA (271) 38 51
L_PAREN (272) 27 47 48 49
R_PAREN (273) 27 47 48 49
L_SQUARE_BRACKET (274) 7 53
R_SQUARE_BRACKET (275) 7 53
ASSIGN (276) 10
INTEGER (277) 6 7
ARRAY (278) 7
OF (279) 7
IF (280) 11 12
THEN (281) 11 12
ENDIF (282) 11 12
ELSE (283) 12
WHILE (284) 13 14
DO (285) 14
CONTINUE (286) 17
FUNCTION (287) 3
BEGINLOOP (288) 13 14
ENDLOOP (289) 13 14
BEGINPARAMS (290) 3
ENDPARAMS (291) 3
BEGINLOCALS (292) 3
ENDLOCALS (293) 3
BEGINBODY (294) 3
ENDBODY (295) 3
READ (296) 15
WRITE (297) 16
OR (298) 20
AND (299) 22
TRUE (300) 25
FALSE (301) 26
RETURN (302) 18
BREAK (303)
NOT (304) 24
IDENTIFIER (305) 3 6 7 49 52 53
DIGITS (306) 7 45 46


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1 2, on right: 0 2
function (54)
    on left: 3, on right: 2
declaration_loop (55)
    on left: 4 5, on right: 3 5
declaration (56)
    on left: 6 7, on right: 5
statement_loop (57)
    on left: 8 9, on right: 3 9 11 12 13 14
statement (58)
    on left: 10 11 12 13 14 15 16 17 18, on right: 8 9
bool_expr (59)
    on left: 19 20, on right: 11 12 13 14 20 27
Relation_Exps (60)
    on left: 21 22, on right: 19 20 22
Relation_Exp (61)
    on left: 23 24 25 26 27, on right: 21 22
comp (62)
    on left: 28 29 30 31 32 33, on right: 23 24
expression (63)
    on left: 34 35 36, on right: 10 18 23 24 35 36 37 38 47 48 53
expression_loop (64)
    on left: 37 38, on right: 38 49
mult_expr (65)
    on left: 39 40 41 42, on right: 34 35 36 40 41 42
term (66)
    on left: 43 44 45 46 47 48 49, on right: 39 40 41 42
var_loop (67)
    on left: 50 51, on right: 15 16 51
var (68)
    on left: 52 53, on right: 10 43 44 50 51


State 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


State 1

    0 $accept: Program . $end
    2 Program: Program . function

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: Program $end .

    $default  accept


State 3

    3 function: FUNCTION . IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    IDENTIFIER  shift, and go to state 5


State 4

    2 Program: Program function .

    $default  reduce using rule 2 (Program)


State 5

    3 function: FUNCTION IDENTIFIER . SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    SEMICOLON  shift, and go to state 6


State 6

    3 function: FUNCTION IDENTIFIER SEMICOLON . BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    BEGINPARAMS  shift, and go to state 7


State 7

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS . declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    $default  reduce using rule 4 (declaration_loop)

    declaration_loop  go to state 8


State 8

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop . ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY
    5 declaration_loop: declaration_loop . declaration SEMICOLON

    ENDPARAMS   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    declaration  go to state 11


State 9

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS . BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    BEGINLOCALS  shift, and go to state 12


State 10

    6 declaration: IDENTIFIER . COLON INTEGER
    7            | IDENTIFIER . COLON ARRAY L_SQUARE_BRACKET DIGITS R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 13


State 11

    5 declaration_loop: declaration_loop declaration . SEMICOLON

    SEMICOLON  shift, and go to state 14


State 12

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS . declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    $default  reduce using rule 4 (declaration_loop)

    declaration_loop  go to state 15


State 13

    6 declaration: IDENTIFIER COLON . INTEGER
    7            | IDENTIFIER COLON . ARRAY L_SQUARE_BRACKET DIGITS R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 16
    ARRAY    shift, and go to state 17


State 14

    5 declaration_loop: declaration_loop declaration SEMICOLON .

    $default  reduce using rule 5 (declaration_loop)


State 15

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop . ENDLOCALS BEGINBODY statement_loop ENDBODY
    5 declaration_loop: declaration_loop . declaration SEMICOLON

    ENDLOCALS   shift, and go to state 18
    IDENTIFIER  shift, and go to state 10

    declaration  go to state 11


State 16

    6 declaration: IDENTIFIER COLON INTEGER .

    $default  reduce using rule 6 (declaration)


State 17

    7 declaration: IDENTIFIER COLON ARRAY . L_SQUARE_BRACKET DIGITS R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 19


State 18

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS . BEGINBODY statement_loop ENDBODY

    BEGINBODY  shift, and go to state 20


State 19

    7 declaration: IDENTIFIER COLON ARRAY L_SQUARE_BRACKET . DIGITS R_SQUARE_BRACKET OF INTEGER

    DIGITS  shift, and go to state 21


State 20

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY . statement_loop ENDBODY

    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    DO          shift, and go to state 24
    CONTINUE    shift, and go to state 25
    READ        shift, and go to state 26
    WRITE       shift, and go to state 27
    RETURN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    statement_loop  go to state 30
    statement       go to state 31
    var             go to state 32


State 21

    7 declaration: IDENTIFIER COLON ARRAY L_SQUARE_BRACKET DIGITS . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


State 22

   11 statement: IF . bool_expr THEN statement_loop ENDIF
   12          | IF . bool_expr THEN statement_loop ELSE statement_loop ENDIF

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 35
    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NOT         shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    bool_expr      go to state 41
    Relation_Exps  go to state 42
    Relation_Exp   go to state 43
    expression     go to state 44
    mult_expr      go to state 45
    term           go to state 46
    var            go to state 47


State 23

   13 statement: WHILE . bool_expr BEGINLOOP statement_loop ENDLOOP

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 35
    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NOT         shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    bool_expr      go to state 48
    Relation_Exps  go to state 42
    Relation_Exp   go to state 43
    expression     go to state 44
    mult_expr      go to state 45
    term           go to state 46
    var            go to state 47


State 24

   14 statement: DO . BEGINLOOP statement_loop ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 49


State 25

   17 statement: CONTINUE .

    $default  reduce using rule 17 (statement)


State 26

   15 statement: READ . var_loop

    IDENTIFIER  shift, and go to state 29

    var_loop  go to state 50
    var       go to state 51


State 27

   16 statement: WRITE . var_loop

    IDENTIFIER  shift, and go to state 29

    var_loop  go to state 52
    var       go to state 51


State 28

   18 statement: RETURN . expression

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    expression  go to state 54
    mult_expr   go to state 45
    term        go to state 46
    var         go to state 47


State 29

   52 var: IDENTIFIER .
   53    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 55

    $default  reduce using rule 52 (var)


State 30

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop . ENDBODY
    9 statement_loop: statement_loop . statement SEMICOLON

    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    DO          shift, and go to state 24
    CONTINUE    shift, and go to state 25
    ENDBODY     shift, and go to state 56
    READ        shift, and go to state 26
    WRITE       shift, and go to state 27
    RETURN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    statement  go to state 57
    var        go to state 32


State 31

    8 statement_loop: statement . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 32

   10 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 59


State 33

    7 declaration: IDENTIFIER COLON ARRAY L_SQUARE_BRACKET DIGITS R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 60


State 34

   44 term: SUB . var
   46     | SUB . DIGITS
   48     | SUB . L_PAREN expression R_PAREN

    L_PAREN     shift, and go to state 61
    IDENTIFIER  shift, and go to state 29
    DIGITS      shift, and go to state 62

    var  go to state 63


State 35

   27 Relation_Exp: L_PAREN . bool_expr R_PAREN
   47 term: L_PAREN . expression R_PAREN

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 35
    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NOT         shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    bool_expr      go to state 64
    Relation_Exps  go to state 42
    Relation_Exp   go to state 43
    expression     go to state 65
    mult_expr      go to state 45
    term           go to state 46
    var            go to state 47


State 36

   25 Relation_Exp: TRUE .

    $default  reduce using rule 25 (Relation_Exp)


State 37

   26 Relation_Exp: FALSE .

    $default  reduce using rule 26 (Relation_Exp)


State 38

   24 Relation_Exp: NOT . expression comp expression

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    expression  go to state 66
    mult_expr   go to state 45
    term        go to state 46
    var         go to state 47


State 39

   49 term: IDENTIFIER . L_PAREN expression_loop R_PAREN
   52 var: IDENTIFIER .
   53    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 67
    L_SQUARE_BRACKET  shift, and go to state 55

    $default  reduce using rule 52 (var)


State 40

   45 term: DIGITS .

    $default  reduce using rule 45 (term)


State 41

   11 statement: IF bool_expr . THEN statement_loop ENDIF
   12          | IF bool_expr . THEN statement_loop ELSE statement_loop ENDIF
   20 bool_expr: bool_expr . OR Relation_Exps

    THEN  shift, and go to state 68
    OR    shift, and go to state 69


State 42

   19 bool_expr: Relation_Exps .
   22 Relation_Exps: Relation_Exps . AND Relation_Exp

    AND  shift, and go to state 70

    $default  reduce using rule 19 (bool_expr)


State 43

   21 Relation_Exps: Relation_Exp .

    $default  reduce using rule 21 (Relation_Exps)


State 44

   23 Relation_Exp: expression . comp expression
   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr

    ADD    shift, and go to state 71
    SUB    shift, and go to state 72
    LT     shift, and go to state 73
    GT     shift, and go to state 74
    LTE    shift, and go to state 75
    GTE    shift, and go to state 76
    EQUIV  shift, and go to state 77
    NOTEQ  shift, and go to state 78

    comp  go to state 79


State 45

   34 expression: mult_expr .
   40 mult_expr: mult_expr . MULT term
   41          | mult_expr . DIV term
   42          | mult_expr . MOD term

    MULT  shift, and go to state 80
    DIV   shift, and go to state 81
    MOD   shift, and go to state 82

    $default  reduce using rule 34 (expression)


State 46

   39 mult_expr: term .

    $default  reduce using rule 39 (mult_expr)


State 47

   43 term: var .

    $default  reduce using rule 43 (term)


State 48

   13 statement: WHILE bool_expr . BEGINLOOP statement_loop ENDLOOP
   20 bool_expr: bool_expr . OR Relation_Exps

    BEGINLOOP  shift, and go to state 83
    OR         shift, and go to state 69


State 49

   14 statement: DO BEGINLOOP . statement_loop ENDLOOP WHILE bool_expr

    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    DO          shift, and go to state 24
    CONTINUE    shift, and go to state 25
    READ        shift, and go to state 26
    WRITE       shift, and go to state 27
    RETURN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    statement_loop  go to state 84
    statement       go to state 31
    var             go to state 32


State 50

   15 statement: READ var_loop .
   51 var_loop: var_loop . COMMA var

    COMMA  shift, and go to state 85

    $default  reduce using rule 15 (statement)


State 51

   50 var_loop: var .

    $default  reduce using rule 50 (var_loop)


State 52

   16 statement: WRITE var_loop .
   51 var_loop: var_loop . COMMA var

    COMMA  shift, and go to state 85

    $default  reduce using rule 16 (statement)


State 53

   47 term: L_PAREN . expression R_PAREN

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    expression  go to state 86
    mult_expr   go to state 45
    term        go to state 46
    var         go to state 47


State 54

   18 statement: RETURN expression .
   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 18 (statement)


State 55

   53 var: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    expression  go to state 87
    mult_expr   go to state 45
    term        go to state 46
    var         go to state 47


State 56

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY .

    $default  reduce using rule 3 (function)


State 57

    9 statement_loop: statement_loop statement . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 58

    8 statement_loop: statement SEMICOLON .

    $default  reduce using rule 8 (statement_loop)


State 59

   10 statement: var ASSIGN . expression

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    expression  go to state 89
    mult_expr   go to state 45
    term        go to state 46
    var         go to state 47


State 60

    7 declaration: IDENTIFIER COLON ARRAY L_SQUARE_BRACKET DIGITS R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 90


State 61

   48 term: SUB L_PAREN . expression R_PAREN

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    expression  go to state 91
    mult_expr   go to state 45
    term        go to state 46
    var         go to state 47


State 62

   46 term: SUB DIGITS .

    $default  reduce using rule 46 (term)


State 63

   44 term: SUB var .

    $default  reduce using rule 44 (term)


State 64

   20 bool_expr: bool_expr . OR Relation_Exps
   27 Relation_Exp: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 92
    OR       shift, and go to state 69


State 65

   23 Relation_Exp: expression . comp expression
   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr
   47 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    LT       shift, and go to state 73
    GT       shift, and go to state 74
    LTE      shift, and go to state 75
    GTE      shift, and go to state 76
    EQUIV    shift, and go to state 77
    NOTEQ    shift, and go to state 78
    R_PAREN  shift, and go to state 93

    comp  go to state 79


State 66

   24 Relation_Exp: NOT expression . comp expression
   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr

    ADD    shift, and go to state 71
    SUB    shift, and go to state 72
    LT     shift, and go to state 73
    GT     shift, and go to state 74
    LTE    shift, and go to state 75
    GTE    shift, and go to state 76
    EQUIV  shift, and go to state 77
    NOTEQ  shift, and go to state 78

    comp  go to state 94


State 67

   49 term: IDENTIFIER L_PAREN . expression_loop R_PAREN

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    expression       go to state 95
    expression_loop  go to state 96
    mult_expr        go to state 45
    term             go to state 46
    var              go to state 47


State 68

   11 statement: IF bool_expr THEN . statement_loop ENDIF
   12          | IF bool_expr THEN . statement_loop ELSE statement_loop ENDIF

    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    DO          shift, and go to state 24
    CONTINUE    shift, and go to state 25
    READ        shift, and go to state 26
    WRITE       shift, and go to state 27
    RETURN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    statement_loop  go to state 97
    statement       go to state 31
    var             go to state 32


State 69

   20 bool_expr: bool_expr OR . Relation_Exps

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 35
    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NOT         shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    Relation_Exps  go to state 98
    Relation_Exp   go to state 43
    expression     go to state 44
    mult_expr      go to state 45
    term           go to state 46
    var            go to state 47


State 70

   22 Relation_Exps: Relation_Exps AND . Relation_Exp

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 35
    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NOT         shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    Relation_Exp  go to state 99
    expression    go to state 44
    mult_expr     go to state 45
    term          go to state 46
    var           go to state 47


State 71

   35 expression: expression ADD . mult_expr

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    mult_expr  go to state 100
    term       go to state 46
    var        go to state 47


State 72

   36 expression: expression SUB . mult_expr

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    mult_expr  go to state 101
    term       go to state 46
    var        go to state 47


State 73

   28 comp: LT .

    $default  reduce using rule 28 (comp)


State 74

   29 comp: GT .

    $default  reduce using rule 29 (comp)


State 75

   30 comp: LTE .

    $default  reduce using rule 30 (comp)


State 76

   31 comp: GTE .

    $default  reduce using rule 31 (comp)


State 77

   33 comp: EQUIV .

    $default  reduce using rule 33 (comp)


State 78

   32 comp: NOTEQ .

    $default  reduce using rule 32 (comp)


State 79

   23 Relation_Exp: expression comp . expression

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    expression  go to state 102
    mult_expr   go to state 45
    term        go to state 46
    var         go to state 47


State 80

   40 mult_expr: mult_expr MULT . term

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    term  go to state 103
    var   go to state 47


State 81

   41 mult_expr: mult_expr DIV . term

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    term  go to state 104
    var   go to state 47


State 82

   42 mult_expr: mult_expr MOD . term

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    term  go to state 105
    var   go to state 47


State 83

   13 statement: WHILE bool_expr BEGINLOOP . statement_loop ENDLOOP

    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    DO          shift, and go to state 24
    CONTINUE    shift, and go to state 25
    READ        shift, and go to state 26
    WRITE       shift, and go to state 27
    RETURN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    statement_loop  go to state 106
    statement       go to state 31
    var             go to state 32


State 84

    9 statement_loop: statement_loop . statement SEMICOLON
   14 statement: DO BEGINLOOP statement_loop . ENDLOOP WHILE bool_expr

    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    DO          shift, and go to state 24
    CONTINUE    shift, and go to state 25
    ENDLOOP     shift, and go to state 107
    READ        shift, and go to state 26
    WRITE       shift, and go to state 27
    RETURN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    statement  go to state 57
    var        go to state 32


State 85

   51 var_loop: var_loop COMMA . var

    IDENTIFIER  shift, and go to state 29

    var  go to state 108


State 86

   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr
   47 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    R_PAREN  shift, and go to state 93


State 87

   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr
   53 var: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    ADD               shift, and go to state 71
    SUB               shift, and go to state 72
    R_SQUARE_BRACKET  shift, and go to state 109


State 88

    9 statement_loop: statement_loop statement SEMICOLON .

    $default  reduce using rule 9 (statement_loop)


State 89

   10 statement: var ASSIGN expression .
   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 10 (statement)


State 90

    7 declaration: IDENTIFIER COLON ARRAY L_SQUARE_BRACKET DIGITS R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 91

   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr
   48 term: SUB L_PAREN expression . R_PAREN

    ADD      shift, and go to state 71
    SUB      shift, and go to state 72
    R_PAREN  shift, and go to state 110


State 92

   27 Relation_Exp: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 27 (Relation_Exp)


State 93

   47 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 47 (term)


State 94

   24 Relation_Exp: NOT expression comp . expression

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    expression  go to state 111
    mult_expr   go to state 45
    term        go to state 46
    var         go to state 47


State 95

   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr
   37 expression_loop: expression .

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 37 (expression_loop)


State 96

   38 expression_loop: expression_loop . COMMA expression
   49 term: IDENTIFIER L_PAREN expression_loop . R_PAREN

    COMMA    shift, and go to state 112
    R_PAREN  shift, and go to state 113


State 97

    9 statement_loop: statement_loop . statement SEMICOLON
   11 statement: IF bool_expr THEN statement_loop . ENDIF
   12          | IF bool_expr THEN statement_loop . ELSE statement_loop ENDIF

    IF          shift, and go to state 22
    ENDIF       shift, and go to state 114
    ELSE        shift, and go to state 115
    WHILE       shift, and go to state 23
    DO          shift, and go to state 24
    CONTINUE    shift, and go to state 25
    READ        shift, and go to state 26
    WRITE       shift, and go to state 27
    RETURN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    statement  go to state 57
    var        go to state 32


State 98

   20 bool_expr: bool_expr OR Relation_Exps .
   22 Relation_Exps: Relation_Exps . AND Relation_Exp

    AND  shift, and go to state 70

    $default  reduce using rule 20 (bool_expr)


State 99

   22 Relation_Exps: Relation_Exps AND Relation_Exp .

    $default  reduce using rule 22 (Relation_Exps)


State 100

   35 expression: expression ADD mult_expr .
   40 mult_expr: mult_expr . MULT term
   41          | mult_expr . DIV term
   42          | mult_expr . MOD term

    MULT  shift, and go to state 80
    DIV   shift, and go to state 81
    MOD   shift, and go to state 82

    $default  reduce using rule 35 (expression)


State 101

   36 expression: expression SUB mult_expr .
   40 mult_expr: mult_expr . MULT term
   41          | mult_expr . DIV term
   42          | mult_expr . MOD term

    MULT  shift, and go to state 80
    DIV   shift, and go to state 81
    MOD   shift, and go to state 82

    $default  reduce using rule 36 (expression)


State 102

   23 Relation_Exp: expression comp expression .
   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 23 (Relation_Exp)


State 103

   40 mult_expr: mult_expr MULT term .

    $default  reduce using rule 40 (mult_expr)


State 104

   41 mult_expr: mult_expr DIV term .

    $default  reduce using rule 41 (mult_expr)


State 105

   42 mult_expr: mult_expr MOD term .

    $default  reduce using rule 42 (mult_expr)


State 106

    9 statement_loop: statement_loop . statement SEMICOLON
   13 statement: WHILE bool_expr BEGINLOOP statement_loop . ENDLOOP

    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    DO          shift, and go to state 24
    CONTINUE    shift, and go to state 25
    ENDLOOP     shift, and go to state 116
    READ        shift, and go to state 26
    WRITE       shift, and go to state 27
    RETURN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    statement  go to state 57
    var        go to state 32


State 107

   14 statement: DO BEGINLOOP statement_loop ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 117


State 108

   51 var_loop: var_loop COMMA var .

    $default  reduce using rule 51 (var_loop)


State 109

   53 var: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 53 (var)


State 110

   48 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 48 (term)


State 111

   24 Relation_Exp: NOT expression comp expression .
   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 24 (Relation_Exp)


State 112

   38 expression_loop: expression_loop COMMA . expression

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 53
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    expression  go to state 118
    mult_expr   go to state 45
    term        go to state 46
    var         go to state 47


State 113

   49 term: IDENTIFIER L_PAREN expression_loop R_PAREN .

    $default  reduce using rule 49 (term)


State 114

   11 statement: IF bool_expr THEN statement_loop ENDIF .

    $default  reduce using rule 11 (statement)


State 115

   12 statement: IF bool_expr THEN statement_loop ELSE . statement_loop ENDIF

    IF          shift, and go to state 22
    WHILE       shift, and go to state 23
    DO          shift, and go to state 24
    CONTINUE    shift, and go to state 25
    READ        shift, and go to state 26
    WRITE       shift, and go to state 27
    RETURN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    statement_loop  go to state 119
    statement       go to state 31
    var             go to state 32


State 116

   13 statement: WHILE bool_expr BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 13 (statement)


State 117

   14 statement: DO BEGINLOOP statement_loop ENDLOOP WHILE . bool_expr

    SUB         shift, and go to state 34
    L_PAREN     shift, and go to state 35
    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    NOT         shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    DIGITS      shift, and go to state 40

    bool_expr      go to state 120
    Relation_Exps  go to state 42
    Relation_Exp   go to state 43
    expression     go to state 44
    mult_expr      go to state 45
    term           go to state 46
    var            go to state 47


State 118

   35 expression: expression . ADD mult_expr
   36           | expression . SUB mult_expr
   38 expression_loop: expression_loop COMMA expression .

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 38 (expression_loop)


State 119

    9 statement_loop: statement_loop . statement SEMICOLON
   12 statement: IF bool_expr THEN statement_loop ELSE statement_loop . ENDIF

    IF          shift, and go to state 22
    ENDIF       shift, and go to state 121
    WHILE       shift, and go to state 23
    DO          shift, and go to state 24
    CONTINUE    shift, and go to state 25
    READ        shift, and go to state 26
    WRITE       shift, and go to state 27
    RETURN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    statement  go to state 57
    var        go to state 32


State 120

   14 statement: DO BEGINLOOP statement_loop ENDLOOP WHILE bool_expr .
   20 bool_expr: bool_expr . OR Relation_Exps

    OR  shift, and go to state 69

    $default  reduce using rule 14 (statement)


State 121

   12 statement: IF bool_expr THEN statement_loop ELSE statement_loop ENDIF .

    $default  reduce using rule 12 (statement)
